AWSTemplateFormatVersion: '2010-09-09'
Transform: 'AWS::Serverless-2016-10-31'
Description: iBox - iPlanner Swagger API
Resources:
  EventTable:
    Type: AWS::DynamoDB::Table
    Properties:
      AttributeDefinitions:
        - AttributeName: "Activity"
          AttributeType: "S"
        -
          AttributeName: "Creator"
          AttributeType: "S"
        -
          AttributeName: "Start"
          AttributeType: "S"
      KeySchema:
        -
          AttributeName: "Creator"
          KeyType: "HASH"
        -
          AttributeName: "Start"
          KeyType: "RANGE"
      ProvisionedThroughput:
        ReadCapacityUnits: "5"
        WriteCapacityUnits: "5"
      TableName: "iplanner_events"
      LocalSecondaryIndexes:
        -
          IndexName: "EventKindLocalSecondaryIndex"
          KeySchema:
            -
              AttributeName: "Creator"
              KeyType: "HASH"
            -
              AttributeName: "Activity"
              KeyType: "RANGE"
          Projection:
            NonKeyAttributes:
              - "Start"
            ProjectionType: "INCLUDE"
  AddEventFunction:
    Type: AWS::Serverless::Function
    Properties:
      Handler: iplanner_event_functions.add_event_handler
      Runtime: python3.7
      Timeout: 50
      MemorySize: 512
      CodeUri: ../iplanner-functions/iplanner-functions.zip
      Policies:
        - DynamoDBCrudPolicy:
            TableName: !Ref EventTable
      Environment:
        Variables:
          TABLE_NAME: !Ref EventTable
      Events:
        AddEventApi:
          Type: Api
          Properties:
            Path: /events
            Method: PUT
            RestApiId:
                Ref: iPlannerApi
  GetEventFunction:
    Type: AWS::Serverless::Function
    Properties:
      Handler: iplanner_event_functions.get_event_handler
      Runtime: python3.7
      Timeout: 50
      MemorySize: 512
      CodeUri: ../iplanner-functions/iplanner-functions.zip
      Policies:
        - DynamoDBReadPolicy:
            TableName: !Ref EventTable
      Environment:
        Variables:
          TABLE_NAME: !Ref EventTable
      Events:
        GetEventByPathApi:
          Type: Api
          Properties:
            Path: /events/{id}
            Method: GET
            RestApiId:
                Ref: iPlannerApi
        GetEventByQueryApi:
          Type: Api
          Properties:
            Path: /events
            Method: GET
            RestApiId:
                Ref: iPlannerApi
  iPlannerApi:
    Type: AWS::Serverless::Api
    Properties:
      StageName: test
      EndpointConfiguration: REGIONAL
      DefinitionBody:
        swagger: "2.0"
        info:
          title: "iPlanner API"
        paths:
          /events:
            get:
              parameters:
              - name: "id"
                in: "query"
                required: true
                type: "string"
              x-amazon-apigateway-request-validator: "Validate query string parameters and\
                \ headers"
              x-amazon-apigateway-integration:
                uri:
                  Fn::Sub: arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${GetEventFunction.Arn}/invocations
                responses: {}
                httpMethod: "POST"
                type: "aws_proxy"
            put:
              x-amazon-apigateway-integration:
                uri:
                  Fn::Sub: arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${AddEventFunction.Arn}/invocations
                responses: {}
                httpMethod: "POST"
                type: "aws_proxy"
          /events/{id}:
            get:
              parameters:
              - name: "id"
                in: "path"
                required: true
                type: "string"
              responses: {}
              x-amazon-apigateway-integration:
                uri:
                  Fn::Sub: arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${GetEventFunction.Arn}/invocations
                responses: {}
                httpMethod: "POST"
                type: "aws_proxy"
        x-amazon-apigateway-request-validators:
          Validate query string parameters and headers:
            validateRequestParameters: true
            validateRequestBody: false