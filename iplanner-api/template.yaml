AWSTemplateFormatVersion: '2010-09-09'
Transform: 'AWS::Serverless-2016-10-31'
Description: iBox - iPlanner API

Resources:
  EventTable:
    Type: AWS::DynamoDB::Table
    Properties:
      AttributeDefinitions:
        - AttributeName: "Id"
          AttributeType: "S"
        - AttributeName: "CreatedBy"
          AttributeType: "S"
        - AttributeName: "StartTime"
          AttributeType: "S"
      KeySchema:
        - AttributeName: "Id"
          KeyType: "HASH"
      ProvisionedThroughput:
        ReadCapacityUnits: "5"
        WriteCapacityUnits: "5"
      TableName: "iplanner-events"
      GlobalSecondaryIndexes:
        -
          IndexName: "CreatorEventsByStart-GSI"
          KeySchema:
            -
              AttributeName: "CreatedBy"
              KeyType: "HASH"
            -
              AttributeName: "StartTime"
              KeyType: "RANGE"
          Projection:
            ProjectionType: "ALL"
  AddEventFunction:
    Type: AWS::Serverless::Function
    Properties:
      Handler: ibox.iplanner.api.lambda.AddEventHandler::handleRequest
      Runtime: java8
      Timeout: 50
      MemorySize: 512
      CodeUri: target/iplanner-api-1.0-SNAPSHOT.jar
      Policies:
        - DynamoDBCrudPolicy:
            TableName: !Ref EventTable
      Environment:
        Variables:
          TABLE_NAME: !Ref EventTable
      Events:
        AddEventApi:
          Type: Api
          Properties:
            Path: /events
            Method: POST
            RestApiId:
                Ref: ApiGatewayApi
  GetEventFunction:
    Type: AWS::Serverless::Function
    Properties:
      Handler: ibox.iplanner.api.lambda.GetEventHandler::handleRequest
      Runtime: java8
      Timeout: 50
      MemorySize: 512
      CodeUri: target/iplanner-api-1.0-SNAPSHOT.jar
      Policies:
        - DynamoDBReadPolicy:
            TableName: !Ref EventTable
      Environment:
        Variables:
          TABLE_NAME: !Ref EventTable
      Events:
        GetEventByIdApi:
          Type: Api
          Properties:
            Path: /events/{id}
            Method: GET
            RestApiId:
                Ref: ApiGatewayApi
  ListEventFunction:
    Type: AWS::Serverless::Function
    Properties:
      Handler: ibox.iplanner.api.lambda.ListEventHandler::handleRequest
      Runtime: java8
      Timeout: 50
      MemorySize: 512
      CodeUri: target/iplanner-api-1.0-SNAPSHOT.jar
      Policies:
        - DynamoDBReadPolicy:
            TableName: !Ref EventTable
      Environment:
        Variables:
          TABLE_NAME: !Ref EventTable
      Events:
        ListEventByCreatorApi:
          Type: Api
          Properties:
            Path: /events/createdBy/{creatorId}
            Method: GET
            RestApiId:
              Ref: ApiGatewayApi
  ApiGatewayApi:
    Type: AWS::Serverless::Api
    Properties:
      StageName: test
      EndpointConfiguration: REGIONAL
      DefinitionBody:
        openapi: "3.0.0"
        info:
          title: iPlanner API
          version: 1.0.0
        paths:
          /events:
            post:
              summary: Create an event
              operationId: createEvents
              tags:
                - events
              responses:
                '201':
                  description: Null response
                default:
                  description: unexpected error
                  content:
                    application/json:
                      schema:
                        $ref: "#/components/schemas/Error"
              x-amazon-apigateway-integration:
                uri:
                  Fn::Sub: arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${AddEventFunction.Arn}/invocations
                responses: {}
                httpMethod: "POST"
                type: "aws_proxy"
          /events/{id}:
            get:
              summary: Info for a specific event
              operationId: getEventById
              tags:
                - events
              parameters:
                - name: id
                  in: path
                  required: true
                  description: The id of the event to retrieve
                  schema:
                    type: string
              responses:
                '200':
                  description: Expected response to a valid request
                  content:
                    application/json:
                      schema:
                        $ref: "#/components/schemas/Event"
                default:
                  description: unexpected error
                  content:
                    application/json:
                      schema:
                        $ref: "#/components/schemas/Error"
              x-amazon-apigateway-integration:
                uri:
                  Fn::Sub: arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${GetEventFunction.Arn}/invocations
                responses: {}
                httpMethod: "POST"
                type: "aws_proxy"
        components:
          schemas:
            Event:
              required:
                - id
                - summary
                - creator
                - start
                - activity
              properties:
                id:
                  type: integer
                  format: int64
                summary:
                  type: string
                description:
                  type: string
                creator:
                  $ref: "#/components/schemas/User"
                created:
                  example: 1995-09-07T10:40:52Z
                  format: date-time
                  type: string
                updated:
                  example: 1995-09-07T10:40:52Z
                  format: date-time
                  type: string
                start:
                  example: 1995-09-07T10:40:52Z
                  format: date-time
                  type: string
                end:
                  example: 1995-09-07T10:40:52Z
                  format: date-time
                  type: string
                activity:
                  type: string
                status:
                  type: string
                location:
                  type: string
                endTimeUnspecified:
                  type: boolean
                recurrence:
                  type: array
                  items:
                    type: string
            Events:
              type: array
              items:
                $ref: "#/components/schemas/Event"
            User:
              required:
                - id
                - email
                - displayName
                - self
              properties:
                id:
                  type: string
                email:
                  type: string
                displayName:
                  type: string
                self:
                  type: boolean
            Error:
              required:
                - code
                - message
              properties:
                code:
                  type: integer
                  format: int32
                message:
                  type: string
        x-amazon-apigateway-request-validators:
          Validate query string parameters and headers:
            validateRequestParameters: true
            validateRequestBody: false
